{"version":3,"file":"static/webpack/static\\development\\pages\\items.js.2c737abec89d73ef9919.hot-update.js","sources":["webpack:///./components/Items.js","webpack:///./components/Pagination.js","webpack:///./components/styles/PaginationStyles.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport styled from 'styled-components';\r\nimport Item from './Item';\r\nimport Pagination from './Pagination';\r\nimport { perPage } from '../config';\r\n\r\nconst ALL_ITEMS_QUERY = gql`\r\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\r\n    items(first: $first, skip: $skip, orderBy: createdAt_DESC) {\r\n      id\r\n      title\r\n      price\r\n      description\r\n      image\r\n      largeImage\r\n    }\r\n  }\r\n`;\r\n\r\nconst Center = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst ItemsList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 60px;\r\n  max-width: ${props => props.theme.maxWidth};\r\n  margin: 0 auto;\r\n`;\r\n\r\nclass Items extends Component {\r\n  render() {\r\n    return (\r\n      <Center>\r\n        <Pagination page={this.props.page} />\r\n        <Query\r\n          query={ALL_ITEMS_QUERY}\r\n          // fetchPolicy=\"network-only\"\r\n          variables={{\r\n            skip: this.props.page * perPage - perPage,\r\n          }}\r\n        >\r\n          {({ data, error, loading }) => {\r\n            if (loading) return <p>Loading...</p>;\r\n            if (error) return <p>Error: {error.message}</p>;\r\n            return (\r\n              <ItemsList>{data.items.map(item => <Item item={item} key={item.id} />)}</ItemsList>\r\n            );\r\n          }}\r\n        </Query>\r\n        <Pagination page={this.props.page} />\r\n      </Center>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Items;\r\nexport { ALL_ITEMS_QUERY };","import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport Head from 'next/head';\r\nimport Link from 'next/link';\r\nimport PaginationStyles from './styles/PaginationStyles';\r\nimport { perPage } from '../config';\r\n\r\nconst PAGINATION_QUERY = gql`\r\n  query PAGINATION_QUERY {\r\n    itemsConnection {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagination = props => (\r\n  <Query query={PAGINATION_QUERY}>\r\n    {({ data, loading, error }) => {\r\n      if (loading) return <p>Loading...</p>;\r\n      const count = data.itemsConnection.aggregate.count;\r\n      const pages = Math.ceil(count / perPage);\r\n      const page = props.page;\r\n      return (\r\n        <PaginationStyles>\r\n          <Head>\r\n            <title>\r\n              Sick Fits! — Page {page} of {pages}\r\n            </title>\r\n          </Head>\r\n          <Link\r\n            prefetch\r\n            href={{\r\n              pathname: 'items',\r\n              query: { page: page - 1 },\r\n            }}\r\n          >\r\n            <a className=\"prev\" aria-disabled={page <= 1}>\r\n              ← Prev\r\n            </a>\r\n          </Link>\r\n          <p>\r\n            Page {props.page} of {pages}!\r\n          </p>\r\n          <p>{count} Items Total</p>\r\n          <Link\r\n            prefetch\r\n            href={{\r\n              pathname: 'items',\r\n              query: { page: page + 1 },\r\n            }}\r\n          >\r\n            <a className=\"prev\" aria-disabled={page >= pages}>\r\n              Next →\r\n            </a>\r\n          </Link>\r\n        </PaginationStyles>\r\n      );\r\n    }}\r\n  </Query>\r\n);\r\n\r\nexport default Pagination;","import styled from 'styled-components';\r\n\r\nconst PaginationStyles = styled.div`\r\n  text-align: center;\r\n  display: inline-grid;\r\n  grid-template-columns: repeat(4, auto);\r\n  align-items: stretch;\r\n  justify-content: center;\r\n  align-content: center;\r\n  margin: 2rem 0;\r\n  border: 1px solid ${props => props.theme.lightgrey};\r\n  border-radius: 10px;\r\n  & > * {\r\n    margin: 0;\r\n    padding: 15px 30px;\r\n    border-right: 1px solid ${props => props.theme.lightgrey};\r\n    &:last-child {\r\n      border-right: 0;\r\n    }\r\n  }\r\n  a[aria-disabled='true'] {\r\n    color: grey;\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nexport default PaginationStyles;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAaA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAGA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAGA;AACA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAvBA;AACA;AAyBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AASA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AA1CA;AACA;AA6CA;;;;;;;;;;;;AChEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAQA;AAAA;AAKA;AAAA;AAWA;;;;A","sourceRoot":""}